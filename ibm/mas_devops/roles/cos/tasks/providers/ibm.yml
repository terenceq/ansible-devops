---
- name: "Fail if cos_type is not provided"
  assert:
    that: cos_type is defined and cos_type != ""
    fail_msg: "cos_type property is required"

- name: "Fail if ibmcloud_apikey is not provided"
  assert:
    that: ibmcloud_apikey is defined and ibmcloud_apikey != ""
    fail_msg: "ibmcloud_apikey property is required"

# 1. Determine the instance name
# ---------------------------------------------------------------------------------------------------------------------
- name: Customize CoS Instance Name using mas_instance_id variables
  when:
    - mas_instance_id is defined
    - mas_instance_id != ""
    - mas_config_dir is defined
    - mas_config_dir != ""
    - ibmcos_instance_name is not defined or ibmcos_instance_name == ""
  set_fact:
    ibmcos_instance_name: "Object Storage for MAS - {{ mas_instance_id }}"

- name: Fallback to default CoS Instance Name
  when:
    - ibmcos_instance_name is not defined or ibmcos_instance_name == ""
  set_fact:
    ibmcos_instance_name: "Object Storage for MAS"

- name: "ibm : Debug general info"
  debug:
    msg:
      - "IBM Cloud Resource Group ........... {{ ibmcloud_resourcegroup }}"
      - "IBM COS url ........................ {{ ibmcos_url }}"
      - "IBM COS username/accesskey ......... {{ ibmcos_username }}"
      - "IBM COS instance name .............. {{ ibmcos_instance_name }}"
      - "IBM COS location info .............. {{ ibmcos_location_info }}"
      - "IBM COS plan type .................. {{ ibmcos_plan_type }}"


# 2. Lookup IBM Cloud Resource Group GUID
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibm : Retrieve resource group guid"
  ibm.cloudcollection.ibm_resource_group_info:
    name: "{{ ibmcloud_resourcegroup }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: rg_info

- name: "ibm : Debug group GUID"
  debug:
    msg:
      - "Resource Group GUID ... {{ rg_info.resource.id }}"

- name: "ibm : Set resource group guid variable"
  when:
    - rg_info.resource.id is defined
  set_fact:
    resourceGID: "{{ rg_info.resource.id }}"


# 3. Create a new COS instance
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibm : Create a cos instance"
  ibm.cloudcollection.ibm_resource_instance:
    name: "{{ ibmcos_instance_name }}"
    resource_group_id: "{{ resourceGID }}"
    service: "cloud-object-storage"
    plan: "{{ ibmcos_plan_type }}"
    location: "{{ ibmcos_location_info }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"

- name: "ibm : Retrieve cos instance ID"
  ibm.cloudcollection.ibm_resource_instance_info:
    name: "{{ ibmcos_instance_name }}"
    resource_group_id: "{{ resourceGID }}"
    service: "cloud-object-storage"
    location: "{{ ibmcos_location_info }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
  register: cos_info

- name: "ibm : Debug IBMCOS resource ID"
  debug:
    msg: "COS Instance resource ID ... {{ cos_info.resource.id }}"

- name: "ibmcos: Set resource instance id variable"
  when: cos_info.resource.id is defined
  set_fact:
    ibmcos_resource_id: "{{ cos_info.resource.id }}"


# 4. Create authentication credentials for the instance
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibm : Create a cos service credential for this MAS instance"
  ibm.cloudcollection.ibm_resource_key:
    name: "{{ mas_instance_id }}-key"
    role: "Manager"
    resource_instance_id: "{{ ibmcos_resource_id }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"

- name: "ibm : Retrieve cos service credential for this MAS instance"
  ibm.cloudcollection.ibm_resource_key_info:
    name: "{{ mas_instance_id }}-key"
    resource_instance_id: "{{ ibmcos_resource_id }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
  register: cos_key_info

- name: "ibm : Debug COS Key Resource"
  debug:
    msg:
      - "COS Key resource ... {{ cos_key_info.resource }}"

- name: "ibm : Set ibmcos_password variable"
  when: cos_key_info.resource.credentials is defined
  set_fact:
    ibmcos_password: "{{ cos_key_info.resource.credentials.apikey }};{{ cos_key_info.resource.credentials.resource_instance_id }}"


# 5. Save the ObjectStorageCfg to local disk
# ---------------------------------------------------------------------------------------------------------------------
- name: Copy objectstorageCfg to filesytem
  when:
    - mas_instance_id is defined
    - mas_instance_id != ""
    - mas_config_dir is defined
    - mas_config_dir != ""
  ansible.builtin.template:
    src: ibm/objectstoragecfg.yml.j2
    dest: "{{ mas_config_dir }}/cos-ibm-system.yml"

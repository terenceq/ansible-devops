---
# The following playbook is an attempt to automate the CP4D 4.0 / 4.5 steps documented here:
# https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_latest/cpd/install/preinstall-overview.html

# Validate properties are provided
# -----------------------------------------------------------------------------
- name: "Check that CPD release version has been provided"
  assert:
    that:
      - cpd_product_version is defined and cpd_product_version != ""
    fail_msg: "CPD version (cpd_product_version) is a required parameter to run this role"

- name: "Check that provided CPD version is supported"
  assert:
    that:
      - cpd_product_version in cpd_supported_versions
    fail_msg: "CPD version ({{ cpd_product_version }}) is not a supported CPD version. Supported CPD versions are: {{ cpd_supported_versions }}."

- name: Check that an entitlement key has been provided
  assert:
    that: cpd_entitlement_key is defined and cpd_entitlement_key != ""
    fail_msg: "ibm_entitlement_key or cpd_entitlement_key override must be provided"

- name: "Run pre-req check"
  include_tasks: "tasks/prereq-check.yml"

- name: "Determine storage classes"
  include_tasks: "tasks/determine-storage-classes.yml"

- name: "Create CP4D Operator Subscriptions"
  include_tasks: "tasks/create-subscriptions.yml"

# Install ibm-entitlement-key in ibm-cpd namespace
# Nothing in the cp4d base platform requires entitlement, but the services that we want to enable in CP4D do.
- name: "Install IBM Entitlement Key"
  include_tasks: "tasks/entitlement.yml"

# At this stage:
# - The two namespaces (ibm-cpd and ibm-cpd-operators) will be created
# - OperatorGroup will have been created in the ibm-cpd-operators namespace
# - Cloud Pak for Data Platform Operator (cpd-platform-operator-manager) v2.0 will be installed in ibm-cpd-operators namespace
# - IBM Cloud Pak Foundational Services (ibm-common-service-operator) v3 will be installed in ibm-cpd-operators namespace
# - IBM NamespaceScope Operator (ibm-namespace-scope-operator) v3 will be installed in ibm-cpd-operators namespace
# - A NamespaceScope will have been created in the ibm-cpd-operators namespace
# - Nothing will exist in the ibm-cpd namespace yet except the entitlement key we just created

- name: "Install CP4D"
  include_tasks: "tasks/install-cp4d.yml"

# At this stage:
# - IBM Zen Operator will be installed into the ibm-common-services namespace
# - IBM Cert Manager Operator will be installed into the ibm-common-services namespace
# - Multiple deployments will be put into the ibm-cp4d namespace:
#     - ibm-nginx
#     - usermgmt
#     - zen-audit
#     - zen-core
#     - zen-core-api
#     - zen-data-sorcerer
#     - zen-watchdog
#     - zen-watcher

# Wait for ZenService service accounts to be created
- name: "Wait for the zen service accounts to appear"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ServiceAccount
    name: "{{ item }}"
    namespace: "{{ cpd_instance_namespace }}"
  register: zen_sa_lookup
  retries: 120 # ~approx 5 minutes before we give up waiting for the CRD to be created
  delay: 5 # seconds
  until:
    - zen_sa_lookup.resources is defined
    - zen_sa_lookup.resources | length > 0
  with_items:
    - zen-admin-sa
    - zen-editor-sa
    - zen-norbac-sa
    - zen-runtime-sa
    - zen-viewer-sa

# Patch the zen service accounts in ibm-cpd namespace to add ibm-entitlement-key
- name: "Patch the zen service accounts"
  kubernetes.core.k8s:
    api_version: v1
    kind: ServiceAccount
    name: "{{ item }}"
    namespace: "{{ cpd_instance_namespace }}"
    apply: true
    definition:
      imagePullSecrets:
        - name: ibm-entitlement-key
  with_items:
    - zen-admin-sa
    - zen-editor-sa
    - zen-norbac-sa
    - zen-runtime-sa
    - zen-viewer-sa

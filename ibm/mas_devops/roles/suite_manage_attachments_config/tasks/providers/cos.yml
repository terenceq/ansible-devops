---
# ibmcloud_apikey is required in order to be able to lookup cos resources
- name: "Fail if ibmcloud_apikey is not provided"
  assert:
    that: ibmcloud_apikey is defined and ibmcloud_apikey != ""
    fail_msg: "ibmcloud_apikey property is required"

# ibmcos_instance_name is required in order to be able to create cos resources i.e credentials and buckets
- name: "Fail if ibmcos_instance_name is not provided"
  assert:
    that: ibmcos_instance_name is defined and ibmcos_instance_name != ""
    fail_msg: "ibmcos_instance_name property is required"

# 1. Determine the instance name
# ---------------------------------------------------------------------------------------------------------------------
- name: Customize CoS bucket name for Manage attachments
  when:
    - ibmcos_attachments_bucket_name == "maxdoc"
  set_fact:
    ibmcos_attachments_bucket_name: "{{ 'maxdoc-' + mas_instance_id }}"

- name: "ibm : Debug general info"
  debug:
    msg:
      - "IBM Cloud Resource Group ........... {{ ibmcloud_resourcegroup }}"
      - "IBM COS url ........................ {{ ibmcos_url }}"
      - "IBM COS instance name .............. {{ ibmcos_instance_name }}"
      - "IBM COS location info .............. {{ ibmcos_location_info }}"
      - "IBM COS bucket name ................ {{ ibmcos_attachments_bucket_name }}"
      - "IBM COS bucket storage class........ {{ ibmcos_attachments_bucket_storage_class }}"
      - "IBM COS bucket location ............ {{ ibmcos_attachments_bucket_location }}"

# 2. Lookup IBM Cloud Resource Group GUID
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibm : Retrieve resource group guid"
  ibm.cloudcollection.ibm_resource_group_info:
    name: "{{ ibmcloud_resourcegroup }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey }}"
  register: rg_info

- name: "ibm : Debug group GUID"
  debug:
    msg:
      - "Resource Group GUID ... {{ rg_info.resource.id }}"

- name: "ibm : Set resource group guid variable"
  when:
    - rg_info.resource.id is defined
  set_fact:
    resourceGID: "{{ rg_info.resource.id }}"


# 3. Retrieve COS instance
# ---------------------------------------------------------------------------------------------------------------------
- name: "Retrieve IBM COS instance ID"
  ibm.cloudcollection.ibm_resource_instance_info:
    name: "{{ ibmcos_instance_name }}"
    resource_group_id: "{{ resourceGID }}"
    service: "cloud-object-storage"
    location: "{{ ibmcos_location_info }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
  register: cos_info

- name: "Debug IBM COS resource ID"
  debug:
    msg: "COS Instance resource ID ... {{ cos_info.resource.id }}"

- name: "Set resource instance id variable"
  when: cos_info.resource.id is defined
  set_fact:
    ibmcos_resource_id: "{{ cos_info.resource.id }}"

# 4. Create authentication credentials for the instance
# ---------------------------------------------------------------------------------------------------------------------
- name: "Create IBM COS service credential for this MAS instance"
  ibm.cloudcollection.ibm_resource_key:
    name: "{{ mas_instance_id }}-attachments-key"
    role: "Manager"
    resource_instance_id: "{{ ibmcos_resource_id }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
    parameters: {'HMAC': true }

- name: "Retrieve IBM COS service credential for this MAS instance"
  ibm.cloudcollection.ibm_resource_key_info:
    name: "{{ mas_instance_id }}-attachments-key"
    resource_instance_id: "{{ ibmcos_resource_id }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
  register: cos_key_info

- name: "Set access key id variable"
  when: cos_key_info.resource.id is defined
  set_fact:
    ibmcos_access_key_id: "{{ cos_key_info.resource.credentials['cos_hmac_keys.access_key_id'] }}"

- name: "Set IBM COS secret access key variable"
  when: cos_key_info.resource.id is defined
  set_fact:
    ibmcos_secret_access_key: "{{ cos_key_info.resource.credentials['cos_hmac_keys.secret_access_key'] }}"

- name: "Debug COS Resource Information needed to configure Manage attachments"
  debug:
    msg:
      - "IBM COS Bucket Name .......... {{ ibmcos_attachments_bucket_name }}"
      - "IBM COS Access Key ID ........ {{ ibmcos_access_key_id }}"
      - "IBM COS Secret Access Key .... {{ ibmcos_secret_access_key }}"
      - "IBM COS url .................. {{ ibmcos_url }}"

# 5. Create COS bucket
# ---------------------------------------------------------------------------------------------------------------------
- name: "Lookup IBM COS bucket named '{{ ibmcos_attachments_bucket_name }}' in COS instance '{{ ibmcos_instance_name }}'"
  ibm.cloudcollection.ibm_cos_bucket_info:
    resource_instance_id: "{{ ibmcos_resource_id }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
    bucket_name: "{{ ibmcos_attachments_bucket_name }}"
    bucket_type: "cross_region_location"
    bucket_region: "{{ ibmcos_attachments_bucket_location }}"
  register: cos_bucket_lookup
  ignore_errors: true # for some reason if bucket does not exist, 'ibm_cos_bucket_info' module fails, might be a bug.

- name: "Debug IBM COS Bucket lookup information"
  debug:
    msg: "IBM COS Bucket Info ... {{ cos_bucket_lookup }}"

- name: "Create COS bucket to store Manage attachments if it does not exist"
  when:
    - cos_bucket_lookup.resource is defined
    - cos_bucket_lookup.resource.bucket_name is not defined # If it fails to find existing bucket, we try to create it anyway.
  ibm.cloudcollection.ibm_cos_bucket:
    resource_instance_id: "{{ ibmcos_resource_id }}"
    ibmcloud_api_key: "{{ ibmcloud_apikey  }}"
    bucket_name: "{{ ibmcos_attachments_bucket_name }}"
    storage_class: "{{ ibmcos_attachments_bucket_storage_class }}"
    cross_region_location: "{{ ibmcos_attachments_bucket_location }}"
  register: cos_bucket_info

- name: "Debug IBM COS Bucket provisioning information"
  debug:
    msg: "IBM COS Bucket Info ... {{ cos_bucket_info }}"
